{"version":3,"sources":["components/Header.js","components/AddMeetingForm.js","components/Meeting.js","components/MeetingViewer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","AddMeetingForm","petNameRef","React","createRef","ownerNameRef","dateRef","hourRef","symptomRef","state","error","createNewMeeting","e","preventDefault","pet","_this","current","value","owner","date","hour","symptom","setState","newMeeting","id","uuid","createMeeting","currentTarget","reset","isError","this","onSubmit","ref","type","placeholder","Component","Meeting","deleteMeeting","info","_this$props$info","onClick","MeetingViewer","meetings","message","Object","keys","length","map","meeting","Meeting_Meeting","key","App","concat","toConsumableArray","console","log","filter","meetingsInLocalStorage","localStorage","getItem","JSON","parse","setItem","stringify","components_Header","components_AddMeetingForm","MeetingViewer_MeetingViewer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.300666c1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = props =>{\r\n    return (\r\n        <header>\r\n            <h1 className = \"text-center\">{props.title}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\n\r\nclass AddMeetingForm extends Component{\r\n\r\n    petNameRef = React.createRef();\r\n    ownerNameRef = React.createRef();\r\n    dateRef = React.createRef();\r\n    hourRef = React.createRef();\r\n    symptomRef = React.createRef();\r\n\r\n    state = { error : false }\r\n\r\n    createNewMeeting = (e) =>{\r\n        e.preventDefault();\r\n        const pet = this.petNameRef.current.value,\r\n              owner = this.ownerNameRef.current.value,\r\n              date = this.dateRef.current.value,                           \r\n              hour = this.hourRef.current.value,\r\n              symptom = this.symptomRef.current.value;\r\n\r\n        if( pet === '' || owner === '' || date === '' || hour === '' || symptom === ''){\r\n            this.setState({ error : true });\r\n        }else{\r\n            const newMeeting = { id : uuid(), pet, owner, date, hour, symptom }\r\n            this.props.createMeeting(newMeeting);\r\n            e.currentTarget.reset();\r\n            this.setState({ error : false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const isError = this.state.error;\r\n        return( \r\n            <div className = \"card mt-5\">\r\n                <div className = \"card-body\">\r\n                    <h2 className = \"card-title text-center mb-5\">Add Meeting</h2>\r\n                    <form onSubmit = {this.createNewMeeting}>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Pet</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <input ref = {this.petNameRef} type=\"text\" className=\"form-control\" placeholder=\"name\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Owner</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <input ref = {this.ownerNameRef} type=\"text\" className=\"form-control\"  placeholder=\"name\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Date</label>\r\n                            <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\r\n                                <input ref =  {this.dateRef} type=\"date\" className=\"form-control\" />\r\n                            </div>                            \r\n\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Hour</label>\r\n                            <div className=\"col-sm-8 col-lg-4\">\r\n                                <input ref =  {this.hourRef} type=\"time\" className=\"form-control\" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Case</label>\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n                                <textarea  ref =  {this.symptomRef} className=\"form-control\" placeholder=\"Symptomatology\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group row justify-content-end\">\r\n                            <div className=\"col-sm-3\">\r\n                                <button type=\"submit\" className=\"btn btn-success w-100\">Add</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    { isError ? <div className = \"alert alert-danger text-center\">Insufficient information</div> : ''}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddMeetingForm;  ","import React,{Component} from 'react';\r\n\r\nexport default class Meeting extends Component {\r\n\r\n    deleteMeeting = ()=> {\r\n        this.props.deleteMeeting(this.props.info.id);\r\n    }\r\n\r\n    render() {\r\n        const {date, hour, owner, pet, symptom} = this.props.info;\r\n        return (\r\n            <div className=\"media mt-3\">\r\n                <div className=\"media-body\">\r\n                    <h3 className=\"mt-0\">{pet}</h3>\r\n                    <p className=\"card-text\"><b>Owner : </b>{owner}</p>\r\n                    <p className=\"card-text\"><b>Date : </b>{date}</p>\r\n                    <p className=\"card-text\"><b>Hour : </b>{hour}</p>\r\n                    <p className=\"card-text\"><b>Sympthoms : </b></p>\r\n                    <p className=\"card-text\">{symptom}</p>\r\n\r\n                    <button onClick={this.deleteMeeting} className=\"btn btn-danger\">Delete &times;</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Meeting from './Meeting';\r\n\r\nexport default class MeetingViewer extends Component {\r\n    render() {\r\n        const meetings = this.props.meetings;\r\n        const message = Object.keys(meetings).length === 0 ? \"There isn't meetings\" : \"Meetings Desktop\";\r\n        return (\r\n            <div className = \"card mt-5\">\r\n                <div className = \"card-body\">\r\n                    <h2 className = \"card-title text-center\">{message}</h2>\r\n                    <div className=\"meeting-list\">\r\n                        {Object.keys(this.props.meetings).map(meeting => (\r\n                            <Meeting\r\n                                key = {meeting}\r\n                                info = {this.props.meetings[meeting]}\r\n                                deleteMeeting = {this.props.deleteMeeting}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Header from './components/Header';\r\nimport AddMeetingForm from './components/AddMeetingForm';\r\nimport MeetingViewer from './components/MeetingViewer';\r\n\r\nclass App extends Component {\r\n\r\n  state = { meetings : [] } \r\n\r\n  componentDidMount(){\r\n    const meetingsInLocalStorage = localStorage.getItem('meetings');\r\n    if(meetingsInLocalStorage){\r\n      this.setState({\r\n        meetings: JSON.parse(meetingsInLocalStorage)\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    localStorage.setItem( 'meetings' , JSON.stringify(this.state.meetings));\r\n  }\r\n\r\n  createMeeting = (newMeeting) =>{\r\n    const meetings = [...this.state.meetings, newMeeting];\r\n    console.log(meetings);\r\n    this.setState({ meetings });\r\n  }\r\n\r\n  deleteMeeting = id => {\r\n    const openMeetings = [...this.state.meetings];\r\n    const meetings = openMeetings.filter(meeting => meeting.id !== id);\r\n    this.setState({ meetings });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"container\">\r\n        <Header \r\n          title = {'Puppy Health Clinic Patients'}\r\n        />\r\n        <div className = \"row\">\r\n          <div className = \"col-md-6\">\r\n            <AddMeetingForm\r\n              createMeeting = {this.createMeeting}\r\n            />\r\n          </div>\r\n          <div className = \"col-md-6\">\r\n            <MeetingViewer\r\n              meetings = {this.state.meetings}\r\n              deleteMeeting = {this.deleteMeeting}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}